// Generated by gencpp from file test_1/test_1.msg
// DO NOT EDIT!


#ifndef TEST_1_MESSAGE_TEST_1_H
#define TEST_1_MESSAGE_TEST_1_H

#include <ros/service_traits.h>


#include <test_1/test_1Request.h>
#include <test_1/test_1Response.h>


namespace test_1
{

struct test_1
{

typedef test_1Request Request;
typedef test_1Response Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct test_1
} // namespace test_1


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::test_1::test_1 > {
  static const char* value()
  {
    return "53244230a18aeabb17bd81ddb3a8f9e8";
  }

  static const char* value(const ::test_1::test_1&) { return value(); }
};

template<>
struct DataType< ::test_1::test_1 > {
  static const char* value()
  {
    return "test_1/test_1";
  }

  static const char* value(const ::test_1::test_1&) { return value(); }
};


// service_traits::MD5Sum< ::test_1::test_1Request> should match 
// service_traits::MD5Sum< ::test_1::test_1 > 
template<>
struct MD5Sum< ::test_1::test_1Request>
{
  static const char* value()
  {
    return MD5Sum< ::test_1::test_1 >::value();
  }
  static const char* value(const ::test_1::test_1Request&)
  {
    return value();
  }
};

// service_traits::DataType< ::test_1::test_1Request> should match 
// service_traits::DataType< ::test_1::test_1 > 
template<>
struct DataType< ::test_1::test_1Request>
{
  static const char* value()
  {
    return DataType< ::test_1::test_1 >::value();
  }
  static const char* value(const ::test_1::test_1Request&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::test_1::test_1Response> should match 
// service_traits::MD5Sum< ::test_1::test_1 > 
template<>
struct MD5Sum< ::test_1::test_1Response>
{
  static const char* value()
  {
    return MD5Sum< ::test_1::test_1 >::value();
  }
  static const char* value(const ::test_1::test_1Response&)
  {
    return value();
  }
};

// service_traits::DataType< ::test_1::test_1Response> should match 
// service_traits::DataType< ::test_1::test_1 > 
template<>
struct DataType< ::test_1::test_1Response>
{
  static const char* value()
  {
    return DataType< ::test_1::test_1 >::value();
  }
  static const char* value(const ::test_1::test_1Response&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TEST_1_MESSAGE_TEST_1_H
