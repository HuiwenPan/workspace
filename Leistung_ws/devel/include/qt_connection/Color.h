// Generated by gencpp from file qt_connection/Color.msg
// DO NOT EDIT!


#ifndef QT_CONNECTION_MESSAGE_COLOR_H
#define QT_CONNECTION_MESSAGE_COLOR_H

#include <ros/service_traits.h>


#include <qt_connection/ColorRequest.h>
#include <qt_connection/ColorResponse.h>


namespace qt_connection
{

struct Color
{

typedef ColorRequest Request;
typedef ColorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Color
} // namespace qt_connection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::qt_connection::Color > {
  static const char* value()
  {
    return "da328168331556f954624b109b527cef";
  }

  static const char* value(const ::qt_connection::Color&) { return value(); }
};

template<>
struct DataType< ::qt_connection::Color > {
  static const char* value()
  {
    return "qt_connection/Color";
  }

  static const char* value(const ::qt_connection::Color&) { return value(); }
};


// service_traits::MD5Sum< ::qt_connection::ColorRequest> should match 
// service_traits::MD5Sum< ::qt_connection::Color > 
template<>
struct MD5Sum< ::qt_connection::ColorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::qt_connection::Color >::value();
  }
  static const char* value(const ::qt_connection::ColorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_connection::ColorRequest> should match 
// service_traits::DataType< ::qt_connection::Color > 
template<>
struct DataType< ::qt_connection::ColorRequest>
{
  static const char* value()
  {
    return DataType< ::qt_connection::Color >::value();
  }
  static const char* value(const ::qt_connection::ColorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::qt_connection::ColorResponse> should match 
// service_traits::MD5Sum< ::qt_connection::Color > 
template<>
struct MD5Sum< ::qt_connection::ColorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::qt_connection::Color >::value();
  }
  static const char* value(const ::qt_connection::ColorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_connection::ColorResponse> should match 
// service_traits::DataType< ::qt_connection::Color > 
template<>
struct DataType< ::qt_connection::ColorResponse>
{
  static const char* value()
  {
    return DataType< ::qt_connection::Color >::value();
  }
  static const char* value(const ::qt_connection::ColorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // QT_CONNECTION_MESSAGE_COLOR_H
