// Generated by gencpp from file qt_connection/Ready.msg
// DO NOT EDIT!


#ifndef QT_CONNECTION_MESSAGE_READY_H
#define QT_CONNECTION_MESSAGE_READY_H

#include <ros/service_traits.h>


#include <qt_connection/ReadyRequest.h>
#include <qt_connection/ReadyResponse.h>


namespace qt_connection
{

struct Ready
{

typedef ReadyRequest Request;
typedef ReadyResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Ready
} // namespace qt_connection


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::qt_connection::Ready > {
  static const char* value()
  {
    return "474a58dbb494a45bb1ca99544cd64e45";
  }

  static const char* value(const ::qt_connection::Ready&) { return value(); }
};

template<>
struct DataType< ::qt_connection::Ready > {
  static const char* value()
  {
    return "qt_connection/Ready";
  }

  static const char* value(const ::qt_connection::Ready&) { return value(); }
};


// service_traits::MD5Sum< ::qt_connection::ReadyRequest> should match 
// service_traits::MD5Sum< ::qt_connection::Ready > 
template<>
struct MD5Sum< ::qt_connection::ReadyRequest>
{
  static const char* value()
  {
    return MD5Sum< ::qt_connection::Ready >::value();
  }
  static const char* value(const ::qt_connection::ReadyRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_connection::ReadyRequest> should match 
// service_traits::DataType< ::qt_connection::Ready > 
template<>
struct DataType< ::qt_connection::ReadyRequest>
{
  static const char* value()
  {
    return DataType< ::qt_connection::Ready >::value();
  }
  static const char* value(const ::qt_connection::ReadyRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::qt_connection::ReadyResponse> should match 
// service_traits::MD5Sum< ::qt_connection::Ready > 
template<>
struct MD5Sum< ::qt_connection::ReadyResponse>
{
  static const char* value()
  {
    return MD5Sum< ::qt_connection::Ready >::value();
  }
  static const char* value(const ::qt_connection::ReadyResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::qt_connection::ReadyResponse> should match 
// service_traits::DataType< ::qt_connection::Ready > 
template<>
struct DataType< ::qt_connection::ReadyResponse>
{
  static const char* value()
  {
    return DataType< ::qt_connection::Ready >::value();
  }
  static const char* value(const ::qt_connection::ReadyResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // QT_CONNECTION_MESSAGE_READY_H
